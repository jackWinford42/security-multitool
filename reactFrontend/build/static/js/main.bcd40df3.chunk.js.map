{"version":3,"sources":["landing/Landing.js","common/Nav.js","auth/Login.js","auth/Signup.js","common/Api.js","investigate/Response.js","investigate/Email.js","investigate/UrlResponse.js","investigate/Url.js","common/HomeItem.js","profile/UserHistory.js","profile/Profile.js","profile/EditProfile.js","home/AllTime.js","home/Hot.js","home/History.js","home/Home.js","common/Routes.js","hooks/useLocalStorage.js","App.js","reportWebVitals.js","reducers/rootReducer.js","index.js"],"names":["Landing","className","id","Link","component","RouterLink","to","Button","variant","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","text","secondary","Navigation","logout","classes","user","useSelector","st","currUser","AppBar","position","Toolbar","username","onClick","LoginForm","login","history","useHistory","dispatch","useDispatch","console","debug","useState","password","formData","setFormData","errors","setErrors","handleSubmit","evt","a","preventDefault","res","worked","type","location","push","handleChange","target","name","value","data","Card","CardBody","onSubmit","placeholder","onChange","color","length","Alert","Signup","signup","email","profile_pic","map","error","BASE_URL","RamtApi","endpoint","method","url","headers","Authorization","token","params","axios","response","message","Array","isArray","this","request","susData","newData","range","Response","open","percent","fraud_score","success","role","style","width","score","overall","overall_score","smtp","smtp_score","disposable","leaked","recent_abuse","honeypot","Email","userEmail","setEmail","setData","loading","setLoading","setOpen","setError","replace","investigate","handleClose","CircularProgress","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","UrlResponse","risk_score","category","spamming","malware","phishing","dns_valid","Url","setUrl","encodeURIComponent","HomeItem","row","state","labels","datasets","label","hoverBackgroundColor","date","time_created","split","item","options","title","display","fontSize","legend","responsive","maintainAspectRatio","popularity","UserHistory","HistoryItems","Profile","isLoading","setIsLoading","empty","setEmpty","displayHistory","setDisplayHistory","useEffect","getUserHistory","userHistory","getHistory","src","height","alt","dumpUserHistory","rows","delCurrUser","EditProfile","edit","React","memo","setLabels","popData","setPopData","scoreData","setScoreData","off","setOff","getSiteHistory","siteHistory","log","getAllTime","then","forEach","names","popular","scores","popState","borderColor","borderWidth","scoreState","labelLeft","labelRight","styleLabelLeft","styleLabelRight","getHot","items","History","uuidv4","prevLoc","prevLocation","view","setView","ToggleButtonGroup","orientation","exclusive","event","nextView","Tooltip","placement","ToggleButton","Routes","privateRoutes","exact","path","render","props","unAuthedRoutes","Login","useLocalStorage","key","firstValue","initialValue","localStorage","getItem","setItem","removeItem","App","setToken","returnedToken","editCurrUser","jwt","decode","getCurrUser","userData","getUser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","store","createStore","action","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bcd40df3.chunk.js","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Link from '@material-ui/core/Link';\nimport { Link as RouterLink } from 'react-router-dom';\nimport \"./Landing.css\";\n\n/** Render the landing page\n */\nexport default function Landing() {\n\treturn (\n\t\t<div className=\"Landing\">\n\t\t\t<h1>RAMT</h1>\n\t\t\t<h5>home of the Reputation Analyses Multi Tool</h5>\n\t\t\t<p id=\"authButtons\">\n        <Link component={RouterLink} to=\"/sign-up\" className=\"authButtonsLeft\">\n          <Button variant=\"contained\">sign up</Button>\n        </Link>\n        <Link component={RouterLink} to=\"/login\" className=\"authButtonsRight\">\n          <Button variant=\"contained\">log in</Button>\n        </Link>\n\t\t\t</p>\n\t\t</div>\n\t);\n}","import React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from \"@material-ui/core/Button\";\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Link from '@material-ui/core/Link';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.text.secondary,\n  },\n}));\n\n/** Displays a navbar with variable links depending on whether\n * there is an authenticated user or not.\n */\nexport default function Navigation({logout}) {\n  const classes = useStyles();\n  const user = useSelector(st => st.currUser);\n\n  const loggedIn = () => {\n    return (\n      <>\n        <Link component={RouterLink} to=\"/email\"><Button>Email</Button></Link>\n        <Link component={RouterLink} to=\"/url\"><Button>Url</Button></Link>\n        <Link component={RouterLink} to=\"/profile\"><Button>Profile</Button></Link>\n        <Link component={RouterLink} to=\"/\" onClick={logout}><Button>Log out</Button></Link>\n      </>\n    )\n  }\n\n  const unauthed = () => {\n    return (\n      <>\n        <Link component={RouterLink} to=\"/sign-up\"><Button>sign up</Button></Link>\n        <Link component={RouterLink} to=\"/login\"><Button>log in</Button></Link>\n      </>\n    )\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          {(user.username) ? \n          <Link component={RouterLink} to=\"/home\">\n            <Button variant=\"outlined\">\n              RAMT\n            </Button>\n          </Link> :\n          <Link component={RouterLink} to=\"/\">\n            <Button variant=\"outlined\">\n              RAMT\n            </Button>\n          </Link>}\n          <div className=\"position-absolute end-0\">\n            {(user.username) ? loggedIn() : unauthed()}\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from 'react-redux';\nimport { Alert, Card, CardBody} from 'reactstrap';\nimport Button from \"@material-ui/core/Button\";\nimport \"./formStyles.css\"\n\n/** log in form for getting the username, password a user.\n *  On submit a callback function from app is called to authenticate \n * the user with the values from the form.\n */\nfunction LoginForm({ login }) {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  console.debug(\"Log in form\");\n\n  const [formData, setFormData] = useState({\n    username:\"\",\n    password:\"\"\n  });\n  const [errors, setErrors] = useState([]);\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    //send the form data to app's login function\n    const res = await login(formData)\n    if (res.worked) {\n      //store the path in redux store so home can display a pop-up\n      await dispatch({type: \"LOCATION_CHANGE\", location: \"/login\"})\n      history.push(\"/home\")\n      \n    } else setErrors(res.errors);\n  }\n\n  // Update form data to reflect change in form fields\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData(data => ({ ...data, [name]: value }));\n  }\n  return (\n    <div className=\"LoginForm col-md-6 col-lg-4\">\n      <Card>\n        <CardBody>\n          <form className=\"form-inline\" onSubmit={handleSubmit}>\n            <label>Username:</label>\n            <input\n              className=\"form-control form-control-md\"\n              name=\"username\"\n              placeholder=\"username\"\n              value={formData.username}\n              onChange={handleChange}\n            />\n            <label>Password:</label>\n            <input\n              className=\"form-control form-control-md\"\n              id=\"bottomInput\"\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"password\"\n              value={formData.password}\n              onChange={handleChange}\n            />\n            <Button variant=\"contained\" color=\"primary\" className=\"authButton\" onClick={handleSubmit}>\n              log in\n            </Button>\n          </form>\n          {errors.length > 0 && <Alert color=\"danger\">{errors}</Alert>}\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default LoginForm;","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from 'react-redux';\nimport { Alert, Card, CardBody } from 'reactstrap';\nimport Button from \"@material-ui/core/Button\";\nimport \"./formStyles.css\"\n\n/** Sign up form for getting the username, password, first name,\n * last name, and email of a new user. On submit a callback function\n * from app is called to register the user with the values from the\n * form.\n */\nexport default function Signup({ signup }) {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  console.debug(\"Sign up form\");\n\n  const [formData, setFormData] = useState({\n    username:\"\",\n    password:\"\",\n    email:\"\",\n    profile_pic:\"\"\n  });\n  const [errors, setErrors] = useState([]);\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    //send the form data to app's signup function\n    const res = await signup(formData)\n\n    if (res.worked) {\n      //store the path in redux store so home can display a pop-up\n      await dispatch({type: \"LOCATION_CHANGE\", location: \"/sign-up\"})\n      history.push(\"/home\");\n    } else setErrors(res.errors);\n  }\n\n  // Update form data to reflect change in form fields\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData(data => ({ ...data, [name]: value }));\n  }\n\n  return (\n      <div className=\"SignupForm col-md-6 col-lg-4\">\n        <Card className=\"authFormCard\">\n          <CardBody>\n            <form className=\"form-inline\" onSubmit={handleSubmit}>\n              <label>Username:</label>\n              <input\n                className=\"form-control form-control-md\"\n                name=\"username\"\n                placeholder=\"username\"\n                value={formData.username}\n                onChange={handleChange}\n              />\n              <label>Password:</label>\n              <input\n                className=\"form-control form-control-md\"\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"password\"\n                value={formData.password}\n                onChange={handleChange}\n              />\n              <label>Email:</label>\n              <input\n                className=\"form-control form-control-md\"\n                name=\"email\"\n                placeholder=\"email\"\n                value={formData.email}\n                onChange={handleChange}\n              />\n              <label>Profile Picture Url:</label>\n              <input\n                className=\"form-control form-control-md\"\n                id=\"bottomInput\"\n                name=\"profile_pic\"\n                placeholder=\"url\"\n                value={formData.profile_pic}\n                onChange={handleChange}\n              />\n              <Button variant=\"contained\" color=\"primary\" className=\"authButton\" onClick={handleSubmit}>\n                sign up\n              </Button>\n            </form>\n            {errors.length > 0 && \n            errors.map(error => <Alert color=\"danger\" key={error}>{error}</Alert>)}\n          </CardBody>\n        </Card>\n      </div>\n  );\n}","import axios from \"axios\";\n\n//const BASE_URL = \"http://localhost:3001\";\nconst BASE_URL = \"https://reputation-analyses-multi-tool.herokuapp.com\"\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass RamtApi {\n  // the token for interactive with the API will be stored here.\n  static token;\n  static user;\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method);\n\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${RamtApi.token}` };\n    const params = (method === \"get\")\n        ? data\n        : {};\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  static async signup(data) {\n    let res = await this.request(\"auth/register\", data, \"post\");\n    return res.token;\n  }\n\n  static async login(data) {\n    let res = await this.request(\"auth/token\", data, \"post\");\n    return res.token;\n  }\n\n  static async getCurrUser(email) {\n    let res = await this.request(`users/${email}`);\n    return res.user;\n  }\n\n  static async investigate(susData) {\n    let res = await this.request(`investigate`, susData, \"post\");\n    return res;\n  }\n\n  static async delCurrUser(email) {\n    let res = await this.request(`users/${email}`, {} ,\"delete\");\n    return res;\n  }\n\n  static async editCurrUser(newData) {\n    let res = await this.request(`users/${RamtApi.user.email}`, newData, \"patch\");\n    return res;\n  }\n\n  static async dumpUserHistory(email) {\n    let res = await this.request(`uHist/${email}/dump`, {}, \"delete\");\n    return res;\n  }\n\n  static async getUserHistory(email) {\n    let res = await this.request(`uHist/${email}`)\n    return res;\n  }\n\n  static async getSiteHistory(range) {\n    let res = await this.request(`siteHist/${range}`)\n    return res;\n  }\n}\n\nexport default RamtApi;","import \"./Response.css\";\nimport { Alert, Card, CardBody} from 'reactstrap';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\n\nexport default function Response({data, open}) {\n  //console.debug(\"RESPONSE COMPONENT\")\n\n  const percent = 100-data.fraud_score;\n\n  function smtp(score) {\n    switch (score) {\n      case -1:\n        return <p>invalid email address</p>\n      case 0:\n        return <p>the mail server for this email exists, but it is rejecting all mail</p>\n      case 1:\n        return <p>the mail server for this email exists, but it is showing a temporary error which is suspicious</p>\n      case 2:\n        return <p>the mail server exists and accepts all mail</p>\n      case 3:\n        return <p>there is nothing suspicious about the mail server</p>\n      default:\n        return <p>invalid email address or server error</p>\n    }\n  }\n\n  function overall(score) {\n    switch (score) {\n      case 0:\n        return <p>invalid email address</p>\n      case 1:\n        return <p>the dns for this email is valid, but the mail server is unreachable</p>\n      case 2:\n        return <p>the dns for this email is valid, but there is a temporary mail rejection error</p>\n      case 3:\n        return <p>the dns for this email is valid, and accepts all mail</p>\n      case 4:\n        return <p>there is nothing suspicious about the dns for this email</p>\n      default:\n        return <p>invalid email address or server error</p>\n    }\n  }\n\n  if (!data.success) return <Alert className=\"redAlert\" color=\"danger\">For best results, enter a valid email</Alert>\n  return (\n    <Card className=\"Response responseCard\">\n      <CardBody>\n        <h5>This email is {percent}% safe <InfoOutlinedIcon id=\"infoIcon\" onClick={() => open()}/></h5>\n        <div className=\"progress\">\n          <div id=\"progressBar\" className=\"progress-bar\" role=\"progressbar\" style={{width: `${percent}%`}} aria-valuenow={percent} aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n        </div>\n        {overall(data.overall_score)}\n        {smtp(data.smtp_score)}\n        {data.disposable && <p>This email is suspected of belonging to a temporary or disposable mail service.\n          Usually associated with fraudsters and scammers.</p>}\n        {data.leaked && <p>This email address is associated with a recent database leak from a third party.\n          Leaked accounts pose a risk as they may have become compromised during a database breach.</p>}\n        {data.recent_abuse && <p>There has been recent verified abuse with this email address. Abuse could \n          be a confirmed chargeback, fake signup, compromised device, fake app install, or similar malicious \n          behavior within the past few days.</p>}\n        {data.honeypot && <p>This email is believed to be a SPAM trap, AKA a honeypot. Bulk mail \n          sent to these emails increases your risk of being blacklisted by large ISPs and ending up in the spam folder.</p>}\n      </CardBody>\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Alert, Card, CardBody } from 'reactstrap';\nimport RamtApi from \"../common/Api\";\nimport Response from \"./Response\";\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport \"./Investigate.css\"\n\n/** Render the email page and handle a call to the emailrep api\n */\nexport default function Email() {\n  //console.debug(\"EMAIL COMPONENT\")\n  const userEmail = useSelector(st => st.currUser.email);\n  const [email, setEmail] = useState(\"\");\n  const [data, setData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    setLoading(true);\n    if (!email.replace(/\\s/g,\"\").length) setError(\"Blank space is not a valid email address.\")\n    else {\n      setError(\"\");\n      const res = (await RamtApi.investigate({type: \"email\", investigate: email, email: userEmail})).data\n      setData(res);\n    }\n    setLoading(false);\n  }\n\n  // Update form data to reflect change in form fields\n  function handleChange(evt) {\n    const { value } = evt.target;\n    setEmail(value)\n  }\n\n  const handleOpen = () => {\n    setOpen(true)\n  };\n\n  const handleClose = () => {\n    setOpen(false)\n  };\n\n\treturn (\n\t\t<div className=\"Email\">\n      <Card className=\"formCard\">\n        <CardBody>\n          <p>Enter an email to test its reputation.</p>\n          <small>Emails which are 100% safe are only saved to\n            your history and are excluded from the site-wide history.</small>\n          <form className=\"form-inline\" onSubmit={handleSubmit}>\n            <label>Email:</label>\n            <input\n              className=\"form-control form-control-md\"\n              name=\"email\"\n              placeholder=\"email\"\n              value={email}\n              onChange={handleChange}\n            />\n            <button type=\"submit\" className=\"authButton btn btn-lg btn-primary\">\n              Investigate\n            </button>\n          </form>\n        </CardBody>\n      </Card>\n      {loading && <CircularProgress color=\"secondary\" />}\n      {data.message && <Response data={data} open={handleOpen}/>}\n      {!!error && <Alert className=\"redAlert\" color=\"danger\">{error}</Alert>}\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"dialog-title\"\n        aria-describedby=\"dialog-description\"\n      >\n        <DialogTitle id=\"dialog-title\">\n          Investigate Information\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"dialog-description\">\n            The safety score is a percentage based on the email reputation and recent known behavior. A safety score below 25 is highly suspicious but not necessarily fraudulent.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} autoFocus>\n            close\n          </Button>\n        </DialogActions>\n      </Dialog>\n\t\t</div>\n\t);\n}","import \"./Response.css\";\nimport { Alert, Card, CardBody} from 'reactstrap';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\n\nexport default function UrlResponse({data, open}) {\n  //console.debug(\"RESPONSE COMPONENT\")\n  const percent = 100 - data.risk_score;\n\n  if (!data.success) return <Alert className=\"redAlert\" color=\"danger\">For best results, enter a valid url. Also, the url you entered may be unreachable.</Alert>\n  return (\n    <Card className=\"UrlResponse responseCard\">\n      <CardBody>\n        <h5>This url is {percent}% safe <InfoOutlinedIcon id=\"infoIcon\" onClick={() => open()}/></h5>\n        <div className=\"progress\">\n          <div id=\"progressBar\" className=\"progress-bar\" role=\"progressbar\" style={{width: `${percent}%`}} aria-valuenow={percent} aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n        </div>\n        <p>The type of content on this site falls into the category: {data.category}</p>\n        {data.spamming && <p>The domain of this URL is associated with email SPAM or abusive email addresses.</p>}\n        {data.malware && <p>This url is associated with malware and viruses.</p>}\n        {data.phishing && <p>This url has been found to be associated with malicious phishing behavior.</p>}\n        {data.dns_valid && <p>The domain of this URL has valid dns records.</p>}\n      </CardBody>\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Alert, Card, CardBody} from 'reactstrap';\nimport RamtApi from \"../common/Api\";\nimport UrlResponse from \"./UrlResponse\";\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport './Investigate.css';\n\n/** Render the Url page and handle a call to the api at the investigate route\n */\nexport default function Url() {\n  //console.debug(\"URL COMPONENT\")\n  const userEmail = useSelector(st => st.currUser.email);\n  const [url, setUrl] = useState(\"\");\n  const [data, setData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    setLoading(true)\n    if (!url.replace(/\\s/g,\"\").length) setError(\"Blank space is not a valid url/domain.\")\n    else {\n      setError(\"\");\n      const res = (await RamtApi.investigate({type: \"url\", investigate: encodeURIComponent(url), email: userEmail})).data;\n      setData(res);\n    }\n    setLoading(false)\n  }\n\n  // Update form data to reflect change in form fields\n  function handleChange(evt) {\n    const { value } = evt.target;\n    setUrl(value)\n  }\n\n  const handleOpen = () => {\n    setOpen(true)\n  };\n\n  const handleClose = () => {\n    setOpen(false)\n  };\n\n\treturn (\n\t\t<div className=\"Url\">\n      <Card className=\"formCard\">\n        <CardBody>\n          <p>Enter an url to test its reputation.</p>\n          <form className=\"form-inline\" onSubmit={handleSubmit}>\n            <label>Url:</label>\n            <input\n              className=\"form-control form-control-md\"\n              name=\"url\"\n              placeholder=\"url\"\n              value={url}\n              onChange={handleChange}\n            />\n            <button type=\"submit\" className=\"authButton btn btn-lg btn-primary\">\n              Investigate\n            </button>\n          </form>\n        </CardBody>\n      </Card>\n      {loading && <CircularProgress color=\"secondary\" />}\n      {data.message && <UrlResponse data={data} open={handleOpen}/>}\n      {!!error && <Alert className=\"redAlert\" color=\"danger\">{error}</Alert>}\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"dialog-title\"\n        aria-describedby=\"dialog-description\"\n      >\n        <DialogTitle id=\"dialog-title\">\n          Investigate Information\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"dialog-description\">\n            The safety score is a percentage based on the url/domain reputation and recent known behavior. A safety score below 25 is highly suspicious but not necessarily fraudulent.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} autoFocus>\n            close\n          </Button>\n        </DialogActions>\n      </Dialog>\n\t\t</div>\n\t);\n}\n","import { Card, CardBody} from 'reactstrap';\nimport { Doughnut } from 'react-chartjs-2'\nimport \"./HomeItem.css\"\n\nexport default function HomeItem({row}) {\n  const state = {\n    labels: ['Safety %', 'Danger %'],\n    datasets: [\n      {\n        label: 'Safety',\n        backgroundColor: [\n          '#C9DE00',\n          '#B21F00'\n        ],\n        hoverBackgroundColor: [\n          '#4B5000',\n          '#501800'\n        ],\n        data: [row.score, 100-row.score]\n      }\n    ]\n  }\n\n  const date = row.time_created.split(\"T\")[0]\n  return (\n    <li>\n      <Card>\n        <CardBody className=\"homeItemBody\">\n          <h3>{row.item}</h3>\n          <div className=\"Doughnut\">\n            <Doughnut\n              data={state}\n              options={{\n                title:{\n                  display:true,\n                  text:'Safety',\n                  fontSize:20\n                },\n                legend:{\n                  display:true,\n                  position:'right'\n                },\n                responsive: true,\n                maintainAspectRatio: true,\n              }}\n            />\n          </div>\n          <div className=\"itemRight\">\n            <strong className={row.type}>type: {row.type}</strong>\n            <p>date analysed: {date}</p>\n            {\"popularity\" in row && <p>popularity score: {row.popularity}</p>}\n          </div>\n        </CardBody>\n      </Card>\n    </li>\n  );\n}\n","import React from \"react\";\nimport HomeItem from \"../common/HomeItem\";\n\nexport default function UserHistory({HistoryItems}) {\n  HistoryItems = HistoryItems.map(row => {\n    return (<HomeItem row={row}/>);\n  })\n\n  return (\n    <div className=\"UserHistory\">\n      <ul>\n        {HistoryItems}\n      </ul>\n    </div>\n  );\n}","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport RamtApi from \"../common/Api\";\nimport UserHistory from \"./UserHistory\";\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport \"./Profile.css\"\n\nexport default function Profile({logout}) {\n  const user = useSelector(st => st.currUser);\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const [empty, setEmpty] = useState(true);\n  const [displayHistory, setDisplayHistory] = useState({});\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    async function getHistory() {\n      try {\n        const userHistory = await RamtApi.getUserHistory(user.email);\n        setDisplayHistory(userHistory)\n        setEmpty(false);\n      } catch (err) {\n        console.error(\"UserHistory get: issue loading history\", err);\n      }\n    }\n    setIsLoading(true);\n    if (empty) getHistory()\n    setIsLoading(false);\n  }, [empty, user])\n\n  const goToEdit = () => {\n    let path = `/edit-profile`; \n    history.push(path);\n  }\n\n  const deleteUser = () => {\n    RamtApi.delCurrUser(user.email)\n    history.push(\"/\");\n    logout();\n  }\n\n  const handleOpen = () => {\n    setOpen(true)\n  };\n\n  const handleClose = () => {\n    setOpen(false)\n  };\n\n  const dumpHistory = () => {\n    RamtApi.dumpUserHistory(user.email);\n    setEmpty(true);\n  }\n\n  if (isLoading) return <p>Loading &hellip;</p>;\n  return (\n    <div className=\"Profile\">\n      <div id=\"title\">\n        <h1>Profile Page</h1>\n      </div>\n      <div id=\"profile_content\">\n        <div className=\"row\">\n          <div className=\"col-4\">\n            <img id=\"profile_page_pic\" src={ user.profile_pic } width=\"250\" height=\"250\" alt={ user.username }/>\n          </div>\n          <div className=\"col-2\"></div>\n          <div className=\"col-5\" id=\"right_profile_div\">\n            <ul className=\"list-group list-group-flush\">\n              <li className=\"list-group-item\"><span>Display name: { user.username }</span></li>\n              <li className=\"list-group-item\"><span>Email: { user.email }</span></li>\n              <li className=\"list-group-item\">\n                <button onClick={goToEdit} className=\"btn btn-lrg btn-warning\">Edit</button>\n              </li>\n              <li className=\"list-group-item\">\n                <button onClick={handleOpen} className=\"btn btn-lrg btn-danger\">Delete Account</button>\n              </li>\n              <li className=\"list-group-item\">\n                <button onClick={dumpHistory} className=\"btn btn-lrg btn-danger\">Clear Your History</button>\n              </li>\n            </ul>\n          </div>\n          <div className=\"col-1\"></div>\n        </div>\n      </div>\n      { displayHistory.history && <UserHistory HistoryItems={displayHistory.history.rows}/>}\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"dialog-title\"\n        aria-describedby=\"dialog-description\"\n      >\n        <DialogTitle id=\"dialog-title\">\n          Are you sure you would like to delete your account?\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"dialog-description\">\n            Deleting your account is permanent and will remove your history.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} autoFocus>\n            no\n          </Button>\n          <Button onClick={deleteUser} autoFocus>\n            yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Alert, Card, CardBody} from 'reactstrap';\nimport { useHistory } from \"react-router-dom\";\n\nexport default function EditProfile({edit}) {\n  const user = useSelector(st => st.currUser);\n  const [formData, setFormData] = useState({\n    username: user.username,\n    profile_pic: user.profile_pic\n  });\n  const [error, setError] = useState(\"\");\n\n  const history = useHistory();\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    if (!formData.username) setError(\"username cannot be empty\")\n    else if (formData.username.length > 15) setError(\"username cannot be more than 15 letters long\")\n    else {\n      edit(formData)\n      history.push(\"/profile\");\n    }\n  }\n\n  // Update form data to reflect change in form fields\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData(data => ({ ...data, [name]: value }));\n  }\n\n  return (\n    <div className=\"EditProfile\">\n      <div id=\"title\">\n        <h1>Your Profile</h1>\n      </div>\n      <div id=\"profile_content\">\n        <Card>\n          <CardBody>\n            <p>Edit details for your account.</p>\n            <form className=\"form-inline\" onSubmit={handleSubmit}>\n              <label>Username:</label>\n              <input\n                className=\"form-control form-control-md\"\n                name=\"username\"\n                placeholder=\"username\"\n                value={formData.username}\n                onChange={handleChange}\n              />\n              <label>Profile Picture Url:</label>\n              <input\n                className=\"form-control form-control-md\"\n                name=\"profile_pic\"\n                placeholder=\"profile_pic\"\n                value={formData.profile_pic}\n                onChange={handleChange}\n              />\n              <button type=\"submit\" className=\"authButton btn btn-lg btn-primary\">\n                Edit\n              </button>\n            </form>\n            {!!error && <Alert color=\"danger\">{error}</Alert>}\n          </CardBody>\n        </Card>\n      </div>\n    </div>\n  )\n}","import React, { useEffect, useState } from \"react\";\nimport RamtApi from \"../common/Api\";\nimport {Bar} from 'react-chartjs-2';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport LabeledSwitchMaterialUi from 'labeled-switch-material-ui';\n\nexport default React.memo(function AllTime() {\n  const [labels, setLabels] = useState([]);\n  const [popData, setPopData] = useState([]);\n  const [scoreData, setScoreData] = useState([]);\n  const [off, setOff] = useState(true);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    async function getAllTime() {\n      try {\n        const siteHistory = await RamtApi.getSiteHistory(\"allTime\");\n        console.log(siteHistory.history.rows)\n        return siteHistory.history.rows;\n      } catch (err) {\n        console.error(\"SiteHistory get: issue loading history\", err);\n      }\n    }\n    setLoading(true);\n    if (!labels.length) getAllTime()\n    .then(history => {\n      history.forEach(row => {\n        setLabels(names => [...names, row.item])\n        setPopData(popular => [...popular, row.popularity])\n        setScoreData(scores => [...scores, row.score])\n      })\n    })\n    \n    setLoading(false); // eslint-disable-next-line\n  }, [])\n\n  const popState = {\n    labels: labels,\n    datasets: [\n      {\n        label: 'Times This Item Has Been Investigated',\n        backgroundColor: 'rgba(222, 243, 253)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: popData\n      }\n    ]\n  }\n\n  const scoreState = {\n    labels: labels,\n    datasets: [\n      {\n        label: 'Safety Score (100 is completely safe)',\n        backgroundColor: 'rgba(253, 223, 223)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: scoreData\n      }\n    ]\n  }\n\n  return (\n    <div className=\"AllTime historyGraph\">\n      {loading && <CircularProgress color=\"secondary\"/>}\n      {!loading && \n      <>\n        <h1>All Time Most Popular Items</h1>\n        <Bar\n          className=\"BarGraph\"\n          data={(off) ? scoreState : popState}\n          options={{\n            title:{\n              display:true,\n              text:'Top Ten Must Popular Items',\n              fontSize:20\n            },\n            legend:{\n              display:true,\n              position:'right'\n            }\n          }}\n        />\n        <LabeledSwitchMaterialUi labelLeft=\"popularity\" labelRight=\"score\"\n        styleLabelLeft={{color: \"rgb(0,0,153)\"}}\n        styleLabelRight={{color: \"rgb(153,0,0)\"}}\n        onChange={() => setOff(!off)}/>\n        <p>The popularity score is determined by how many times each item has been investigated.</p>\n      </>}\n    </div>\n  )\n})\n","import React, { useEffect, useState } from \"react\";\nimport RamtApi from \"../common/Api\";\nimport {Bar} from 'react-chartjs-2';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport LabeledSwitchMaterialUi from 'labeled-switch-material-ui';\n\nexport default React.memo(function Hot() {\n  const [labels, setLabels] = useState([]);\n  const [popData, setPopData] = useState([]);\n  const [scoreData, setScoreData] = useState([]);\n  const [off, setOff] = useState(true);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    async function getHot() {\n      try {\n        const siteHistory = await RamtApi.getSiteHistory(\"Hot\");\n        console.log(siteHistory.history.rows)\n        return siteHistory.history.rows;\n      } catch (err) {\n        console.error(\"SiteHistory get: issue loading history\", err);\n      }\n    }\n    setLoading(true);\n    if (!labels.length) getHot()\n    .then(history => {\n      history.forEach(row => {\n        setLabels(items => [...items, row.item])\n        setPopData(popular => [...popular, row.popularity])\n        setScoreData(scores => [...scores, row.score])\n      })\n    })\n    \n    setLoading(false); // eslint-disable-next-line\n  }, [])\n\n  const popState = {\n    labels: labels,\n    datasets: [\n      {\n        label: 'Times This Item Has Been Investigated',\n        backgroundColor: 'rgba(222, 243, 253)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: popData\n      }\n    ]\n  }\n\n  const scoreState = {\n    labels: labels,\n    datasets: [\n      {\n        label: 'Safety Score (100 is completely safe)',\n        backgroundColor: 'rgba(253, 223, 223)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: scoreData\n      }\n    ]\n  }\n\n  return (\n    <div className=\"historyGraph\">\n      {loading && <CircularProgress color=\"secondary\" />}\n      {!loading && \n      <>\n        <h1>Most Popular Items Over The Past Seven Days</h1>\n        <Bar\n          className=\"BarGraph\"\n          data={(off) ? scoreState : popState}\n          options={{\n            title:{\n              display:true,\n              text:'Top Ten Must Popular Items',\n              fontSize:20\n            },\n            legend:{\n              display:true,\n              position:'right'\n            }\n          }}\n        />\n        <LabeledSwitchMaterialUi labelLeft=\"popularity\" labelRight=\"score\"\n        styleLabelLeft={{color: \"rgb(0,0,153)\"}}\n        styleLabelRight={{color: \"rgb(153,0,0)\"}}\n        onChange={() => setOff(!off)}/>\n        <p>The popularity score is determined by how many times each item has been investigated.</p>\n      </>}\n    </div>\n  )\n})\n","import React, { useEffect, useState } from \"react\";\nimport RamtApi from \"../common/Api\";\nimport HomeItem from \"../common/HomeItem\";\nimport {v4 as uuidv4} from \"uuid\"\n\nexport default function History() {\n  const [displayHistory, setDisplayHistory] = useState([]);\n\n  useEffect(() => {\n    async function getHistory() {\n      try {\n        console.log(\"INSIDE HOME HOOK\")\n        const siteHistory = await RamtApi.getSiteHistory(\"all\");\n        setDisplayHistory(siteHistory.history.rows);\n      } catch (err) {\n        console.error(\"SiteHistory get: issue loading history\", err);\n      }\n    }\n    getHistory();\n  }, [])\n\n  const HistoryItems = displayHistory.map(row => {\n    return (<HomeItem row={row} key={uuidv4()}/>)\n  })\n\n  return (\n    <ul className=\"history\">\n      {HistoryItems}\n    </ul>\n  )\n}","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport LocalFireDepartmentIcon from '@mui/icons-material/LocalFireDepartment';\nimport HourglassBottomOutlinedIcon from '@mui/icons-material/HourglassBottomOutlined';\nimport HistoryOutlinedIcon from '@mui/icons-material/HistoryOutlined';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Tooltip from '@mui/material/Tooltip';\nimport \"./Home.css\";\nimport AllTime from \"./AllTime\";\nimport Hot from \"./Hot\";\nimport History from \"./History\";\n\nexport default React.memo(function Home() {\n  const user = useSelector(st => st.currUser);\n  const prevLoc = useSelector(st => st.prevLocation)\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false)\n  const [view, setView] = useState('history');\n\n  //only display the welcome dialog box if the user just signed in\n  if (prevLoc === \"/login\" || prevLoc === \"/sign-up\") {\n    setOpen(true);\n    dispatch({type: \"LOCATION_CHANGE\", location: \"/home\"})\n  }\n\n  const handleChange = (event, nextView) => {\n    setView(nextView);\n    console.log(nextView)\n  };\n\n  const handleClose = () => {\n    setOpen(false)\n  };\n\n  const choseRange = () => {\n    if (view === \"history\" ) {\n      return (<History/>)\n    } else if (view === \"hot\") {\n      return (<Hot/>)\n    } else {\n      return (<AllTime/>)\n    }\n  }\n\n  return (\n    <div className=\"Home\">\n      <ToggleButtonGroup\n        id=\"rangeBar\"\n        orientation=\"vertical\"\n        value={view}\n        exclusive\n        onChange={handleChange}\n      >\n        <Tooltip title=\"Recent History\" placement=\"right\">\n          <ToggleButton value=\"history\" aria-label=\"history\">\n            <HistoryOutlinedIcon/>\n          </ToggleButton>        \n        </Tooltip>\n        <Tooltip title=\"Hot\" placement=\"right\">\n          <ToggleButton value=\"hot\" aria-label=\"hot\">\n            <LocalFireDepartmentIcon/>\n          </ToggleButton>\n        </Tooltip>\n        <Tooltip title=\"All Time\" placement=\"right\">\n          <ToggleButton value=\"allTime\" aria-label=\"allTime\">\n            <HourglassBottomOutlinedIcon/>\n          </ToggleButton>\n        </Tooltip>\n      </ToggleButtonGroup>\n      {choseRange()}\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"dialog-title\"\n        aria-describedby=\"dialog-description\"\n      >\n        <DialogTitle id=\"dialog-title\">\n          Welcome back {user.username}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"dialog-description\">\n            You are now authorized to use the Reputation Analyses Multi Tool.<br></br>\n            Please, enjoy your stay.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} autoFocus>\n            Let's go\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n})\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport Landing from \"../landing/Landing\";\nimport Nav from \"./Nav\";\nimport Login from \"../auth/Login\";\nimport Signup from \"../auth/Signup\";\nimport Email from \"../investigate/Email\";\nimport Url from \"../investigate/Url\";\nimport Profile from \"../profile/Profile\";\nimport EditProfile from \"../profile/EditProfile\";\nimport Home from \"../home/Home\";\n\n/** Router servers as a router and parent function for nav and page \n * content on each route.\n */\nexport default function Routes({signup, login, logout, edit}) {\n  const user = useSelector(st => st.currUser);\n\n  const privateRoutes = (\n    <Switch>\n      <Route exact path=\"/\" render={(props) => <Home {...props}/>}/>\n      <Route path=\"/email\">\n        <Email/>\n      </Route>\n      <Route path=\"/url\">\n        <Url/>\n      </Route>\n      <Route path=\"/home\" render={(props) => <Home {...props}/>}/>\n      <Route path=\"/profile\">\n        <Profile logout={logout}/>\n      </Route>\n      <Route path=\"/edit-profile\">\n        <EditProfile edit={edit}/>\n      </Route>\n      <Route>\n        <p>Hmmm. I can't seem to find what you want.</p>\n      </Route>\n    </Switch>\n  )\n\n  const unAuthedRoutes = (\n    <Switch>\n      <Route exact path=\"/\">\n        <Landing/>\n      </Route>\n      <Route path=\"/login\">\n        <Login login={login}/>\n      </Route>\n      <Route path=\"/sign-up\">\n        <Signup signup={signup}/>\n      </Route>\n      <Route>\n        <p>Hmmm. I can't seem to find what you want. You may need to be authorized before visiting this page.</p>\n      </Route>\n    </Switch>\n  )\n\n  return (\n    <BrowserRouter>\n      <Nav logout={logout}/>\n      <main>\n        {(!!user.username) ? privateRoutes : unAuthedRoutes}\n      </main>\n    </BrowserRouter>\n  );\n}","import { useState, useEffect } from \"react\";\n\n/** Custom hook for keeping state data synced with localStorage.\n *\n * This creates `item` as state and look in localStorage for current value\n * (if not found, defaults to `firstValue`)\n *\n * When `item` changes, effect re-runs:\n * - if new state is null, removes from localStorage\n * - else, updates localStorage\n *\n * To the component, this just acts like state that is also synced to/from\n * localStorage::\n *\n *   const [myThing, setMyThing] = useLocalStorage(\"myThing\")\n */\n\nfunction useLocalStorage(key, firstValue = null) {\n  const initialValue = localStorage.getItem(key) || firstValue;\n\n  const [item, setItem] = useState(initialValue);\n\n  useEffect(function setKeyInLocalStorage() {\n    //uncomment below line for debugging\n    //console.debug(\"hooks useLocalStorage useEffect\", \"item=\", item);\n\n    if (item === null) {\n      localStorage.removeItem(key);\n    } else {\n      localStorage.setItem(key, item);\n    }\n  }, [key, item]);\n\n  return [item, setItem];\n}\n\nexport default useLocalStorage;\n","import React, {useEffect} from \"react\";\nimport jwt from \"jsonwebtoken\";\nimport Routes from \"./common/Routes\";\nimport RamtApi from \"./common/Api\";\nimport { useDispatch } from 'react-redux';\nimport './App.css';\nimport useLocalStorage from \"./hooks/useLocalStorage\";\n\nconst TOKEN_STORAGE_ID = \"start token\"\n\nexport default function App() {\n  const [token, setToken] = useLocalStorage(TOKEN_STORAGE_ID);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    async function getUser() {\n      try {\n        console.log(\"INSIDE APP HOOK\")\n\n        let { email } = jwt.decode(token);\n\n        if (!RamtApi.token) RamtApi.token = token;\n        const userData = await RamtApi.getCurrUser(email);\n        RamtApi.user = userData;\n\n        await dispatch({type: \"BEGIN_AUTH_SESSION\", user: userData});\n      } catch (err) {\n        console.error(\"App getUser: issue loading user\", err);\n      }\n    }\n    if (token) getUser();\n  }, [token, dispatch]);\n\n  async function signup(formData) {\n    try {\n      const returnedToken = await RamtApi.signup(formData)\n      setToken(returnedToken);\n      RamtApi.token = returnedToken;\n      return {worked: true};\n    } catch (errors) {\n      console.error(\"There was an error while signing up\", errors);\n      return {worked: false, errors};\n    }\n  }\n\n  async function login(formData) {\n    try {\n      const returnedToken = await RamtApi.login(formData)\n      setToken(returnedToken);\n      RamtApi.token = returnedToken;\n      return {worked: true};\n    } catch (errors) {\n      console.error(\"There was an error while logging in\", errors);\n      return {worked: false, errors};\n    }\n  }\n\n  async function edit(formData) {\n    try {\n      const returnedToken = (await RamtApi.editCurrUser(formData)).token\n      setToken(returnedToken);\n      RamtApi.token = returnedToken;\n      return {worked: true};\n    } catch (errors) {\n      console.error(\"There was an error while editing your profile\", errors);\n      return {worked: false, errors};\n    }\n  }\n\n  async function logout() {\n    setToken(null);\n    dispatch({type: \"END_AUTH_SESSION\"})\n    console.debug(\"SUCCESSFULLY LOGGED OUT\")\n  }\n\n  return (\n    <div className=\"App\">\n      <Routes signup={signup} login={login} logout={logout} edit={edit}/>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const INITIAL_STATE = { currUser: {}, prevLocation: \"\" };\n\nexport default function rootReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case \"BEGIN_AUTH_SESSION\":\n      return {...state, currUser: action.user }\n    case \"END_AUTH_SESSION\":\n      return {...state, currUser: {}};\n    case \"FETCH_USER\":\n      return state.currUser;\n    case \"LOCATION_CHANGE\":\n      console.log(action)\n      console.log(action.location)\n      console.log({...state, prevLocation: action.location})\n      return {...state, prevLocation: action.location}\n    default:\n      return state;\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}