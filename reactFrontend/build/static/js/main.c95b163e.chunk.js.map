{"version":3,"sources":["landing/Landing.js","common/Nav.js","auth/Login.js","auth/Signup.js","common/Api.js","investigate/Response.js","investigate/Email.js","investigate/UrlResponse.js","investigate/Url.js","profile/UserHistory.js","profile/Profile.js","profile/EditProfile.js","Home.js","common/Routes.js","App.js","reportWebVitals.js","reducers/rootReducer.js","index.js"],"names":["Landing","user","useSelector","st","currUser","greeting","username","className","id","Link","component","RouterLink","to","Button","variant","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","text","secondary","Navigation","logout","classes","AppBar","position","Toolbar","onClick","LoginForm","login","history","useHistory","console","debug","useState","password","formData","setFormData","errors","setErrors","handleSubmit","evt","a","preventDefault","res","worked","push","handleChange","target","name","value","data","Card","CardBody","onSubmit","placeholder","onChange","color","length","Alert","Signup","signup","email","profile_pic","map","error","BASE_URL","process","REACT_APP_BASE_URL","RamtApi","endpoint","method","url","headers","Authorization","token","params","log","axios","response","message","Array","isArray","this","request","susData","newData","Response","percent","fraud_score","valid","role","style","width","score","overall","overall_score","smtp","smtp_score","disposable","leaked","recent_abuse","honeypot","Email","setEmail","setData","investigate","type","UrlResponse","risk_score","page_size","category","spamming","malware","phishing","dns_valid","Url","setUrl","encodeURIComponent","UserHistory","HistoryItems","row","item","uuidv4","Profile","isLoading","setIsLoading","empty","setEmpty","displayHistory","setDisplayHistory","useEffect","getUserHistory","userHistory","getHistory","src","height","alt","delCurrUser","dumpUserHistory","rows","EditProfile","dispatch","useDispatch","editCurrUser","Home","getSiteHistory","siteHistory","Routes","privateRoutes","exact","path","unAuthedRoutes","Login","App","setToken","returnedToken","localStorage","setItem","removeItem","jwt","decode","getCurrUser","userData","getUser","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","store","createStore","state","action","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c95b163e.chunk.js","sourcesContent":["import React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport Link from '@material-ui/core/Link';\nimport { Link as RouterLink } from 'react-router-dom';\nimport \"./Landing.css\";\n\n/** Render the landing page\n */\nexport default function Landing() {\n\tconst user = useSelector(st => st.currUser);\n\tconst greeting = (<h4>Welcome back {user.username}</h4>);\n\treturn (\n\t\t<div className=\"Landing\">\n\t\t\t<h1>RAMT</h1>\n\t\t\t<h5>home of the Reputation Analyses Multi Tool</h5>\n\t\t\t{(user.username) ? \n\t\t\tgreeting :\n\t\t\t<p id=\"authButtons\">\n        <Link component={RouterLink} to=\"/sign-up\" className=\"authButtons\">\n          <Button variant=\"contained\">sign up</Button>\n        </Link>\n        <Link component={RouterLink} to=\"/login\" className=\"authButtons\">\n          <Button variant=\"contained\">log in</Button>\n        </Link>\n\t\t\t</p>}\n\t\t</div>\n\t);\n}","import React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from \"@material-ui/core/Button\";\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Link from '@material-ui/core/Link';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.text.secondary,\n  },\n}));\n\n/** Displays a navbar with variable links depending on whether\n * there is an authenticated user or not.\n */\nexport default function Navigation({logout}) {\n  const classes = useStyles();\n  const user = useSelector(st => st.currUser);\n\n  const loggedIn = () => {\n    return (\n      <>\n        <Link component={RouterLink} to=\"/email\"><Button>Email</Button></Link>\n        <Link component={RouterLink} to=\"/url\"><Button>Url</Button></Link>\n        <Link component={RouterLink} to=\"/home\"><Button>Home</Button></Link>\n        <Link component={RouterLink} to=\"/profile\"><Button>Profile</Button></Link>\n        <Link component={RouterLink} to=\"/\" onClick={logout}><Button>Log out</Button></Link>\n      </>\n    )\n  }\n\n  const unauthed = () => {\n    return (\n      <>\n        <Link component={RouterLink} to=\"/sign-up\"><Button>sign up</Button></Link>\n        <Link component={RouterLink} to=\"/login\"><Button>log in</Button></Link>\n      </>\n    )\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Link component={RouterLink} to=\"/\">\n            <Button variant=\"outlined\">\n              RAMT\n            </Button>\n          </Link>\n          <div className=\"position-absolute end-0\">\n            {(user.username) ? loggedIn() : unauthed()}\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Alert, Card, CardBody} from 'reactstrap';\nimport Button from \"@material-ui/core/Button\";\nimport \"./formStyles.css\"\n\n/** Sign up form for getting the username, password a user.\n *  On submit a callback function from app is called to authenticate \n * the user with the values from the form.\n */\nfunction LoginForm({ login }) {\n  const history = useHistory();\n  console.debug(\"Log in form\");\n\n  const [formData, setFormData] = useState({\n    username:\"\",\n    password:\"\"\n  });\n  const [errors, setErrors] = useState([]);\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    //send the form data to app's login function\n    const res = await login(formData) \n    if (res.worked) history.push(\"/\");\n    else setErrors(res.errors);\n  }\n\n  // Update form data to reflect change in form fields\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData(data => ({ ...data, [name]: value }));\n  }\n\n  return (\n    <div className=\"LoginForm col-md-6 col-lg-4\">\n      <Card>\n        <CardBody>\n          <form className=\"form-inline\" onSubmit={handleSubmit}>\n            <label>Username:</label>\n            <input\n              className=\"form-control form-control-md\"\n              name=\"username\"\n              placeholder=\"username\"\n              value={formData.username}\n              onChange={handleChange}\n            />\n            <label>Password:</label>\n            <input\n              className=\"form-control form-control-md\"\n              name=\"password\"\n              placeholder=\"password\"\n              value={formData.password}\n              onChange={handleChange}\n            />\n            <Button variant=\"contained\" color=\"primary\" className=\"authButton\" onClick={handleSubmit}>\n              log in\n            </Button>\n          </form>\n          {errors.length ? <Alert color=\"danger\">{errors}</Alert>:null}\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default LoginForm;","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Alert, Card, CardBody } from 'reactstrap';\nimport Button from \"@material-ui/core/Button\";\nimport \"./formStyles.css\"\n\n/** Sign up form for getting the username, password, first name,\n * last name, and email of a new user. On submit a callback function\n * from app is called to register the user with the values from the\n * form.\n */\nexport default function Signup({ signup }) {\n  const history = useHistory();\n  console.debug(\"Sign up form\");\n\n  const [formData, setFormData] = useState({\n    username:\"\",\n    password:\"\",\n    email:\"\",\n    profile_pic:\"\"\n  });\n  const [errors, setErrors] = useState([]);\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    //send the form data to app's signup function\n    const res = await signup(formData)\n    if (res.worked) history.push(\"/\");\n    else setErrors(res.errors);\n  }\n\n  // Update form data to reflect change in form fields\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData(data => ({ ...data, [name]: value }));\n  }\n\n  return (\n      <div className=\"SignupForm col-md-6 col-lg-4\">\n        <Card className=\"authFormCard\">\n          <CardBody>\n            <form className=\"form-inline\" onSubmit={handleSubmit}>\n              <label>Username:</label>\n              <input\n                className=\"form-control form-control-md\"\n                name=\"username\"\n                placeholder=\"username\"\n                value={formData.username}\n                onChange={handleChange}\n              />\n              <label>Password:</label>\n              <input\n                className=\"form-control form-control-md\"\n                name=\"password\"\n                placeholder=\"password\"\n                value={formData.password}\n                onChange={handleChange}\n              />\n              <label>Email:</label>\n              <input\n                className=\"form-control form-control-md\"\n                name=\"email\"\n                placeholder=\"email\"\n                value={formData.email}\n                onChange={handleChange}\n              />\n              <label>Profile Picture Url:</label>\n              <input\n                className=\"form-control form-control-md\"\n                name=\"profile_pic\"\n                placeholder=\"url\"\n                value={formData.profile_pic}\n                onChange={handleChange}\n              />\n              <Button variant=\"contained\" color=\"primary\" className=\"authButton\" onClick={handleSubmit}>\n                sign up\n              </Button>\n            </form>\n            {errors.length > 0 && \n            errors.map(error => <Alert color=\"danger\" key={error}>{error}</Alert>)}\n          </CardBody>\n        </Card>\n      </div>\n  );\n}","import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass RamtApi {\n  // the token for interactive with the API will be stored here.\n  static token;\n  static user;\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method);\n\n    //there are multiple ways to pass an authorization token, this is how you pass it in the header.\n    //this has been provided to show you another way to pass the token. you are only expected to read this code for this project.\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${RamtApi.token}` };\n    const params = (method === \"get\")\n        ? data\n        : {};\n\n    try {\n      console.log(url)\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  static async signup(data) {\n    let res = await this.request(\"auth/register\", data, \"post\");\n    return res.token;\n  }\n\n  static async login(data) {\n    let res = await this.request(\"auth/token\", data, \"post\");\n    return res.token;\n  }\n\n  static async getCurrUser(email) {\n    let res = await this.request(`users/${email}`);\n    return res.user;\n  }\n\n  static async investigate(susData) {\n    let res = await this.request(`investigate`, susData, \"post\");\n    await this.request(`uHist/${RamtApi.user.email}`, res.data, \"post\")\n    return res;\n  }\n\n  static async delCurrUser(email) {\n    let res = await this.request(`users/${email}`, {} ,\"delete\");\n    return res;\n  }\n\n  static async editCurrUser(newData) {\n    console.log(RamtApi.user.email)\n    let res = await this.request(`users/${RamtApi.user.email}`, newData, \"patch\");\n    return res;\n  }\n\n  static async dumpUserHistory(email) {\n    let res = await this.request(`uHist/${email}/dump`, {}, \"delete\");\n    return res;\n  }\n\n  static async getUserHistory(email) {\n    let res = await this.request(`uHist/${email}`)\n    return res;\n  }\n\n  static async getSiteHistory() {\n    let res = await this.request(`siteHist/`)\n    return res;\n  }\n}\n\nexport default RamtApi;","import \"./Response.css\";\n\nexport default function Response({data}) {\n  console.debug(\"RESPONSE COMPONENT\")\n\n  const percent = 100-data.fraud_score;\n\n  function smtp(score) {\n    switch (score) {\n      case -1:\n        return <p>invalid email address</p>\n      case 0:\n        return <p>the mail server for this email exists, but it is rejecting all mail</p>\n      case 1:\n        return <p>the mail server for this email exists, but it is showing a temporary error which is suspicious</p>\n      case 2:\n        return <p>the mail server exists and accepts all mail</p>\n      case 3:\n        return <p>there is nothing suspicious about the mail server</p>\n      default:\n        return <p>invalid email address or server error</p>\n    }\n  }\n\n  function overall(score) {\n    switch (score) {\n      case 0:\n        return <p>invalid email address</p>\n      case 1:\n        return <p>the dns for this email is valid, but the mail server is unreachable</p>\n      case 2:\n        return <p>the dns for this email is valid, but there is a temporary mail rejection error</p>\n      case 3:\n        return <p>the dns for this email is valid, and accepts all mail</p>\n      case 4:\n        return <p>there is nothing suspicious about the dns for this email</p>\n      default:\n        return <p>invalid email address or server error</p>\n    }\n  }\n\n  if (!data.valid) return <p>For best results, enter a valid email</p>\n  return (\n    <div className=\"Response\">\n      <h5>This email is {percent}% safe</h5>\n      <div className=\"progress\">\n        <div id=\"progressBar\" className=\"progress-bar\" role=\"progressbar\" style={{width: `${percent}%`}} aria-valuenow={percent} aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n      </div>\n      {overall(data.overall_score)}\n      {smtp(data.smtp_score)}\n      {data.disposable && <p>This email is suspected of belonging to a temporary or disposable mail service.\n        Usually associated with fraudsters and scammers.</p>}\n      {data.leaked && <p>This email address is associated with a recent database leak from a third party.\n        Leaked accounts pose a risk as they may have become compromised during a database breach.</p>}\n      {data.recent_abuse && <p>There has been recent verified abuse with this email address. Abuse could \n        be a confirmed chargeback, fake signup, compromised device, fake app install, or similar malicious \n        behavior within the past few days.</p>}\n      {data.honeypot && <p>This email is believed to be a SPAM trap, AKA a honeypot. Bulk mail \n        sent to these emails increases your risk of being blacklisted by large ISPs and ending up in the spam folder.</p>}\n    </div>\n  );\n}","import React, { useState } from \"react\";\nimport { Card, CardBody} from 'reactstrap';\nimport RamtApi from \"../common/Api\";\nimport Response from \"./Response\";\n\n/** Render the email page and handle a call to the emailrep api\n */\nexport default function Email() {\n  console.debug(\"EMAIL COMPONENT\")\n  const [email, setEmail] = useState(\"\");\n  const [data, setData] = useState({});\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    const res = (await RamtApi.investigate({type: \"email\", investigate: email})).data\n    console.log(res)\n    setData(res)\n  }\n\n  // Update form data to reflect change in form fields\n  function handleChange(evt) {\n    const { value } = evt.target;\n    setEmail(value)\n  }\n\n\treturn (\n\t\t<div className=\"Email\">\n      <Card>\n        <CardBody>\n          <p>Enter an email to test its reputation.</p>\n          <form className=\"form-inline\" onSubmit={handleSubmit}>\n            <label>Email:</label>\n            <input\n              className=\"form-control form-control-md\"\n              name=\"email\"\n              placeholder=\"email\"\n              value={email}\n              onChange={handleChange}\n            />\n            <button type=\"submit\" className=\"authButton btn btn-lg btn-primary\">\n              Investigate\n            </button>\n          </form>\n        </CardBody>\n      </Card>\n      {data.message && <Response data={data}/>}\n\t\t</div>\n\t);\n}","import \"./Response.css\";\n\nexport default function UrlResponse({data}) {\n    console.debug(\"RESPONSE COMPONENT\")\n\n    const percent = 100 - data.risk_score;\n  \n    if (data.page_size === 0) return <p>For best results, enter a valid url. Also, the url you entered may be unreachable.</p>\n    return (\n      <div className=\"UrlResponse\">\n        <h5>This url is {percent}% safe</h5>\n        <div className=\"progress\">\n          <div id=\"progressBar\" className=\"progress-bar\" role=\"progressbar\" style={{width: `${percent}%`}} aria-valuenow={percent} aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n        </div>\n        <p>The type of content on this site falls into the category: {data.category}</p>\n        {data.spamming && <p>The domain of this URL is associated with email SPAM or abusive email addresses.</p>}\n        {data.malware && <p>This url is associated with malware and viruses.</p>}\n        {data.phishing && <p>This url has been found to be associated with malicious phishing behavior.</p>}\n        {data.dns_valid && <p>The domain of this URL has valid dns records.</p>}\n      </div>\n    );\n}","import React, { useState } from \"react\";\nimport { Card, CardBody} from 'reactstrap';\nimport RamtApi from \"../common/Api\";\nimport UrlResponse from \"./UrlResponse\";\n\n/** Render the Url page and handle a call to the api at the investigate route\n */\nexport default function Url() {\n  console.debug(\"URL COMPONENT\")\n  const [url, setUrl] = useState(\"\");\n  const [data, setData] = useState({});\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    const res = (await RamtApi.investigate({type: \"url\", investigate: encodeURIComponent(url)})).data\n    console.log(\"CHECKPOINT\")\n    console.log(res);\n    setData(res)\n  }\n\n  // Update form data to reflect change in form fields\n  function handleChange(evt) {\n    const { value } = evt.target;\n    setUrl(value)\n  }\n\n\treturn (\n\t\t<div className=\"Url\">\n      <Card>\n        <CardBody>\n          <p>Enter an url to test its reputation.</p>\n          <form className=\"form-inline\" onSubmit={handleSubmit}>\n            <label>Url:</label>\n            <input\n              className=\"form-control form-control-md\"\n              name=\"url\"\n              placeholder=\"url\"\n              value={url}\n              onChange={handleChange}\n            />\n            <button type=\"submit\" className=\"authButton btn btn-lg btn-primary\">\n              Investigate\n            </button>\n          </form>\n        </CardBody>\n      </Card>\n      {data.message && <UrlResponse data={data}/>}\n\t\t</div>\n\t);\n}","import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default function UserHistory({HistoryItems}) {\n  console.log(HistoryItems)\n  HistoryItems = HistoryItems.map(row => {\n    return (\n    <li key={uuidv4()}>\n      <h5>{row.item}</h5>\n      <p>type: {row.type}</p>\n      <p>safety score out of 100: {row.score}</p>\n    </li>\n    );\n  })\n\n  return (\n    <div className=\"UserHistory\">\n      <ul>\n        {HistoryItems}\n      </ul>\n    </div>\n  );\n}","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport RamtApi from \"../common/Api\";\nimport UserHistory from \"./UserHistory\";\n\nexport default function Profile({logout}) {\n  const user = useSelector(st => st.currUser);\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const [empty, setEmpty] = useState(true);\n  const [displayHistory, setDisplayHistory] = useState({});\n\n  useEffect(() => {\n    async function getHistory() {\n      try {\n        const userHistory = await RamtApi.getUserHistory(user.email);\n        setDisplayHistory(userHistory)\n        setEmpty(false);\n      } catch (err) {\n        console.error(\"UserHistory get: issue loading history\", err);\n      }\n    }\n    setIsLoading(true);\n    if (empty) getHistory()\n    setIsLoading(false);\n  }, [empty, user])\n\n  const goToEdit = () => {\n    let path = `/edit-profile`; \n    history.push(path);\n  }\n\n  const deleteUser = () => {\n    RamtApi.delCurrUser(user.email)\n    history.push(\"/\");\n    logout();\n  }\n\n  const dumpHistory = () => {\n    RamtApi.dumpUserHistory(user.email);\n    setEmpty(true);\n  }\n\n  if (isLoading) return <p>Loading &hellip;</p>;\n  return (\n    <div className=\"Profile\">\n      <div id=\"title\">\n        <h1>Your Profile</h1>\n      </div>\n      <div id=\"profile_content\">\n        <div className=\"row\">\n          <div className=\"col-4\">\n            <img id=\"profile_page_pic\" src={ user.profile_pic } width=\"250\" height=\"250\" alt={ user.username }/>\n          </div>\n          <div className=\"col-2\"></div>\n          <div className=\"col-5\" id=\"right_profile_div\">\n            <ul className=\"list-group list-group-flush\">\n              <li className=\"list-group-item\"><span>Display name: { user.username }</span></li>\n              <li className=\"list-group-item\"><span>Email: { user.email }</span></li>\n              <li className=\"list-group-item\">\n                <button onClick={goToEdit} className=\"btn btn-lrg btn-warning\">Edit</button>\n              </li>\n              <li className=\"list-group-item\">\n                <button onClick={deleteUser} className=\"btn btn-lrg btn-danger\">Delete Account</button>\n              </li>\n              <li className=\"list-group-item\">\n                <button onClick={dumpHistory} className=\"btn btn-lrg btn-danger\">Clear Your History</button>\n              </li>\n            </ul>\n          </div>\n          <div className=\"col-1\"></div>\n        </div>\n      </div>\n      { displayHistory.history && <UserHistory HistoryItems={displayHistory.history.rows}/>}\n    </div>\n  )\n}","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport RamtApi from \"../common/Api\";\nimport { Card, CardBody} from 'reactstrap';\nimport { useHistory } from \"react-router-dom\";\n\nexport default function EditProfile() {\n  const [formData, setFormData] = useState({\n    username: \"\",\n    profile_pic: \"\"\n  });\n  const dispatch = useDispatch();\n  const user = useSelector(st => st.currUser);\n  console.log(user)\n  const history = useHistory();\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    const res = await RamtApi.editCurrUser(formData)\n    console.log(\"CHECKPOINT\")\n    console.log(res);\n    res.user.email = user.email;\n    dispatch({type: \"BEGIN_AUTH_SESSION\", user: res.user})\n    history.push(\"/profile\");\n  }\n\n  // Update form data to reflect change in form fields\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData(data => ({ ...data, [name]: value }));\n  }\n\n  return (\n    <div className=\"EditProfile\">\n      <div id=\"title\">\n        <h1>Your Profile</h1>\n      </div>\n      <div id=\"profile_content\">\n        <Card>\n          <CardBody>\n            <p>Edit details for your account.</p>\n            <form className=\"form-inline\" onSubmit={handleSubmit}>\n              <label>Username:</label>\n              <input\n                className=\"form-control form-control-md\"\n                name=\"username\"\n                placeholder=\"username\"\n                value={formData.username}\n                onChange={handleChange}\n              />\n              <label>Profile Picture Url:</label>\n              <input\n                className=\"form-control form-control-md\"\n                name=\"profile_pic\"\n                placeholder=\"profile_pic\"\n                value={formData.profile_pic}\n                onChange={handleChange}\n              />\n              <button type=\"submit\" className=\"authButton btn btn-lg btn-primary\">\n                Edit\n              </button>\n            </form>\n          </CardBody>\n        </Card>\n      </div>\n    </div>\n  )\n}","import React, { useEffect, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport RamtApi from \"./common/Api\";\n\nexport default function Home() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [empty, setEmpty] = useState(true);\n  const [displayHistory, setDisplayHistory] = useState([]);\n\n  useEffect(() => {\n    async function getHistory() {\n      try {\n        const siteHistory = await RamtApi.getSiteHistory();\n        setDisplayHistory(siteHistory.history.rows);\n        setEmpty(false);\n      } catch (err) {\n        console.error(\"SiteHistory get: issue loading history\", err);\n      }\n    }\n    setIsLoading(true);\n    if (empty) getHistory();\n    setIsLoading(false);\n  }, [empty])\n  console.log(displayHistory)\n  const HistoryItems = displayHistory.map(row => {\n    return (\n      <li key={uuidv4()}>\n        <h5>{row.item}</h5>\n        <p>type: {row.type}</p>\n        <p>safety score out of 100: {row.score}</p>\n      </li>\n    );\n  })\n\n  if (isLoading) return <p>Loading &hellip;</p>;\n  return (\n    <div className=\"Home\">\n      <ul>\n        {HistoryItems}\n      </ul>\n    </div>\n  );\n}","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport Landing from \"../landing/Landing\";\nimport Nav from \"./Nav\";\nimport Login from \"../auth/Login\";\nimport Signup from \"../auth/Signup\";\nimport Email from \"../investigate/Email\";\nimport Url from \"../investigate/Url\";\nimport Profile from \"../profile/Profile\";\nimport EditProfile from \"../profile/EditProfile\";\nimport Home from \"../Home\";\n\n/** Router servers as a router and parent function for nav and page \n * content on each route.\n */\nexport default function Routes({signup, login, logout}) {\n  const user = useSelector(st => st.currUser);\n  console.log(user)\n\n  const privateRoutes = (\n    <Switch>\n      <Route exact path=\"/\">\n        <Landing/>\n      </Route>\n      <Route path=\"/email\">\n        <Email/>\n      </Route>\n      <Route path=\"/url\">\n        <Url/>\n      </Route>\n      <Route path=\"/home\">\n        <Home/>\n      </Route>\n      <Route path=\"/profile\">\n        <Profile logout={logout}/>\n      </Route>\n      <Route path=\"/edit-profile\">\n        <EditProfile/>\n      </Route>\n      <Route>\n        <p>Hmmm. I can't seem to find what you want.</p>\n      </Route>\n    </Switch>\n  )\n\n  const unAuthedRoutes = (\n    <Switch>\n      <Route exact path=\"/\">\n        <Landing/>\n      </Route>\n      <Route path=\"/email\">\n        <Email/>\n      </Route>\n      <Route path=\"/login\">\n        <Login login={login}/>\n      </Route>\n      <Route path=\"/sign-up\">\n        <Signup signup={signup}/>\n      </Route>\n      <Route>\n        <p>Hmmm. I can't seem to find what you want. You may need to be authorized before visiting this page.</p>\n      </Route>\n    </Switch>\n  )\n  console.log(!!user.username)\n  console.log((user.username) ? privateRoutes : unAuthedRoutes)\n  return (\n    <BrowserRouter>\n      <Nav logout={logout}/>\n      <main>\n        {(user.username) ? privateRoutes : unAuthedRoutes}\n      </main>\n    </BrowserRouter>\n  );\n}","import React, {useState, useEffect} from \"react\";\nimport jwt from \"jsonwebtoken\";\nimport Routes from \"./common/Routes\";\nimport RamtApi from \"./common/Api\";\nimport { useDispatch } from 'react-redux';\nimport './App.css';\n\nexport default function App() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    async function getUser() {\n      try {\n        let { email } = jwt.decode(token);\n\n        const userData = await RamtApi.getCurrUser(email);\n        RamtApi.user = await userData;\n\n        dispatch({type: \"BEGIN_AUTH_SESSION\", user: userData})\n      } catch (err) {\n        console.error(\"App getUser: issue loading user\", err);\n      }\n    }\n    setIsLoading(true);\n    if (token) getUser();\n    setIsLoading(false);\n  }, [token, dispatch]);\n\n  async function signup(formData) {\n    try {\n      const returnedToken = await RamtApi.signup(formData)\n      setToken(returnedToken);\n      localStorage.setItem(\"token\", returnedToken);\n      RamtApi.token = returnedToken;\n      return {worked: true};\n    } catch (errors) {\n      console.error(\"There was an error while signing up\", errors);\n      return {worked: false, errors};\n    }\n  }\n\n  async function login(formData) {\n    try {\n      const returnedToken = await RamtApi.login(formData)\n      console.log(returnedToken)\n      setToken(returnedToken);\n      localStorage.setItem(\"token\", returnedToken);\n      RamtApi.token = returnedToken;\n      return {worked: true};\n    } catch (errors) {\n      console.error(\"There was an error while logging in\", errors);\n      return {worked: false, errors};\n    }\n  }\n\n  async function logout() {\n    setToken(null);\n    dispatch({type: \"END_AUTH_SESSION\"})\n    localStorage.removeItem(\"token\");\n    console.debug(\"SUCCESSFULLY LOGGED OUT\")\n  }\n\n  if (isLoading) return <p>Loading &hellip;</p>;\n\n  return (\n    <div className=\"App\">\n      <Routes signup={signup} login={login} logout={logout}/>\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const INITIAL_STATE = { currUser: {} };\n\nexport default function rootReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case \"BEGIN_AUTH_SESSION\":\n      return {currUser: action.user }\n    case \"END_AUTH_SESSION\":\n      return {currUser: {}};\n    case \"FETCH_USER\":\n      return state.currUser;\n    default:\n      return state;\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}